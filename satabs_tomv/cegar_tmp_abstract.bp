// automatically generated by CPROVER/SATABS

// variables with procedure-global scope

decl b10;  // (1 & dir_status[0]) == 0
decl b11;  // (1 & dir_status[0]) == 1
decl b20;  // (1 & dir_status[1]) == 0
decl b21;  // (1 & dir_status[1]) == 1

// main
void main() begin

      // the procedure-local variables

  decl b0;                 // (1 & dir_status[i]) == 1
  decl b1;                 // (1 & dir_status[dir1]) == 1
  decl b2;                 // (1 & dir_status[dir2]) == 1
  decl b3;                 // (1 & dir_status[dir1]) == 0
  decl b4;                 // (1 & dir_status[dir2]) == 0
  decl b5_dir2_le_0;       // dir2 <= 0
  decl b6_dir1_le_0;       // dir1 <= 0
  decl b7_dir2_eq_minus1;  // dir2 == -1
  decl b8;                 // (1 & dir_status[i]) == 0
  decl b9_i_lt_3;          // i < 3
  decl b12;                // return_value_fs_exists_dir$1 == 0
  decl b13;                // (1 & dir_status[parent]) == 0
  decl b14_parent_gt_3;    // parent > 3
  decl b15_parent_lt_0;    // parent < 0
  decl b16_parent_eq_0;    // parent == 0
  decl b17_1_plus_i_lt_3;  // 1 + i < 3
  decl b18;                // (1 & dir_status[1 + i]) == 0
  decl b19;                // (1 & dir_status[1 + i]) == 1
  decl b22_dir_lt_3;       // dir < 3
  decl b23_dir_ge_0;       // dir >= 0
  decl b24;                // return_value_nondet_int$1 < 3
  decl b25;                // return_value_nondet_int$1 >= 0
  decl b26_i_lt_6;         // i < 6
  decl b27_i_eq_0;         // i == 0
  decl b28_1_plus_i_lt_6;  // 1 + i < 6
  decl b29_2_plus_i_lt_6;  // 2 + i < 6
  decl b30_3_plus_i_lt_6;  // 3 + i < 6
  decl b31_4_plus_i_lt_6;  // 4 + i < 6

      // initialization of the shared-global and thread-local variables

      b10:=*; 
      b11:=*; 
      b20:=*; 
      b21:=*; 

 PC0: skip; // location only

    // file wrapped_fs.c line 30
 PC1: skip; // no predicates changed

    // file wrapped_fs.c line 31
 PC2: b0,b1,b2,b3,b4,b8,b10,b11,b13,b18,b19,b20,b21 := *,*,*,*,*,*,1,0,*,*,*,1,0 constrain
    (b1 | b3) &
    ((!b1) | (!b3)) &
    ('b1 | 'b3) &
    ('b2 | 'b4) &
    (b2 | b4) &
    ((!b2) | (!b4)) &
    ('b0 | 'b8) &
    (b0 | b8) &
    (b10 | b11) &
    ('b13 | (!b16_parent_eq_0)) &
    ((!b0) | (!b8)) &
    ((!b10) | (!b11)) &
    (b10 | (!b13) | (!b16_parent_eq_0)) &
    (b18 | b19) &
    ((!b18) | (!b19)) &
    (b24 | b25) &
    (b20 | b21) &
    (b26_i_lt_6 | (!b27_i_eq_0)) &
    ((!b27_i_eq_0) | b28_1_plus_i_lt_6) &
    ((!b27_i_eq_0) | b29_2_plus_i_lt_6) &
    ((!b20) | (!b21)) &
    ((!b27_i_eq_0) | b31_4_plus_i_lt_6);
    // TO Predicates: b0 b1 b2 b3 b4 b8 b10 b11 b13 b18 b19 b20 b21

    // file wrapped_fs.c line 33
 PC3: skip; // no predicates changed

    // file wrapped_fs.c line 35
 PC4: skip; // no predicates changed

    // file wrapped_fs.c line 36
 PC5: skip; // no predicates changed

    // file wrapped_fs.c line 37
 PC6: skip; // no predicates changed

    // file wrapped_fs.c line 49
 PC7: skip; // no predicates changed

    // file <built-in> line 26
 PC8: skip; // no predicates changed

    // file <built-in> line 27
 PC9: skip; // no predicates changed

    // file <built-in> line 28
PC10: skip; // no predicates changed

    // file <built-in> line 29
PC11: skip; // no predicates changed

    // file <built-in> line 38
PC12: skip; // no predicates changed

PC13: skip; // location only

PC14: skip; // location only

    // file wrapped_fs.c line 54 function main
PC15: skip; // location only

    // file wrapped_fs.c line 187 function init_fs
PC16: b26_i_lt_6,b27_i_eq_0,b28_1_plus_i_lt_6,b29_2_plus_i_lt_6,b30_3_plus_i_lt_6,b31_4_plus_i_lt_6 := *,*,*,*,*,* constrain
    ((!b18) | (!b19)) &
    (b22_dir_lt_3 | b23_dir_ge_0) &
    (b24 | b25) &
    (b26_i_lt_6 | (!b27_i_eq_0)) &
    ((!b27_i_eq_0) | b28_1_plus_i_lt_6) &
    ((!b27_i_eq_0) | b29_2_plus_i_lt_6) &
    ((!b27_i_eq_0) | b30_3_plus_i_lt_6) &
    ((!b27_i_eq_0) | b31_4_plus_i_lt_6);
    // TO Predicates: b26_i_lt_6 b27_i_eq_0 b28_1_plus_i_lt_6 b29_2_plus_i_lt_6 b30_3_plus_i_lt_6 b31_4_plus_i_lt_6

    // file wrapped_fs.c line 196 function init_fs
PC17: b26_i_lt_6,b27_i_eq_0,b28_1_plus_i_lt_6,b29_2_plus_i_lt_6,b30_3_plus_i_lt_6,b31_4_plus_i_lt_6 := 1,1,1,1,1,1 constrain
    ((!b18) | (!b19)) &
    (b22_dir_lt_3 | b23_dir_ge_0) &
    (b24 | b25) &
    (b26_i_lt_6 | (!b29_2_plus_i_lt_6) | b30_3_plus_i_lt_6 | (!b31_4_plus_i_lt_6));
    // TO Predicates: b26_i_lt_6 b27_i_eq_0 b28_1_plus_i_lt_6 b29_2_plus_i_lt_6 b30_3_plus_i_lt_6 b31_4_plus_i_lt_6

  l1:
PC18: if (schoose[0,(0) | b27_i_eq_0 | (b26_i_lt_6 & b29_2_plus_i_lt_6 & b30_3_plus_i_lt_6 & (!b31_4_plus_i_lt_6)) | (b26_i_lt_6 & b31_4_plus_i_lt_6)]) then goto l2; fi;

    // file wrapped_fs.c line 197 function init_fs
PC19: b0,b1,b2,b3,b4,b8,b10,b11,b13,b18,b19,b20,b21 := *,*,*,*,*,*,*,*,*,*,*,*,* constrain
    ((!b10) | 'b10) &
    ((!b10) | (!'b11)) &
    (b13 | (!'b13) | (!b15_parent_lt_0) | (!b27_i_eq_0));
    // TO Predicates: b0 b1 b2 b3 b4 b8 b10 b11 b13 b18 b19 b20 b21

    // file wrapped_fs.c line 196 function init_fs
PC20: b26_i_lt_6,b27_i_eq_0,b28_1_plus_i_lt_6,b29_2_plus_i_lt_6,b30_3_plus_i_lt_6,b31_4_plus_i_lt_6 := b28_1_plus_i_lt_6,*,b29_2_plus_i_lt_6,b30_3_plus_i_lt_6,b31_4_plus_i_lt_6,* constrain
    (b10 | b11) &
    ((!b10) | (!b11)) &
    ('b26_i_lt_6 | (!b27_i_eq_0)) &
    ((!b27_i_eq_0) | 'b29_2_plus_i_lt_6) &
    ((!b27_i_eq_0) | 'b31_4_plus_i_lt_6);
    // TO Predicates: b26_i_lt_6 b27_i_eq_0 b28_1_plus_i_lt_6 b29_2_plus_i_lt_6 b30_3_plus_i_lt_6 b31_4_plus_i_lt_6

PC21: goto l1;

    // file wrapped_fs.c line 199 function init_fs
    // FROM Predicates: b27_i_eq_0
  l2:
PC22: b26_i_lt_6,b27_i_eq_0,b28_1_plus_i_lt_6,b29_2_plus_i_lt_6,b30_3_plus_i_lt_6,b31_4_plus_i_lt_6 := 1,1,1,1,1,1 constrain
    ((!b18) | (!b19)) &
    (b22_dir_lt_3 | b23_dir_ge_0) &
    (b24 | b25) &
    (b10 | b11) &
    ((!b10) | (!b11));
    // TO Predicates: b20 b21 b26_i_lt_6 b27_i_eq_0 b28_1_plus_i_lt_6 b29_2_plus_i_lt_6 b30_3_plus_i_lt_6 b31_4_plus_i_lt_6

    // FROM Predicates: b20 b21 b26_i_lt_6 b28_1_plus_i_lt_6 b29_2_plus_i_lt_6 b30_3_plus_i_lt_6 b31_4_plus_i_lt_6
  l3:
PC23: if !b26_i_lt_6 then goto l4; fi;
    // TO Predicates: b20 b21 b28_1_plus_i_lt_6 b29_2_plus_i_lt_6 b30_3_plus_i_lt_6 b31_4_plus_i_lt_6

    // file wrapped_fs.c line 200 function init_fs
    // FROM Predicates: b20 b21 b28_1_plus_i_lt_6 b29_2_plus_i_lt_6 b30_3_plus_i_lt_6 b31_4_plus_i_lt_6
PC24: skip; // no predicates changed
    // TO Predicates: b20 b21 b28_1_plus_i_lt_6 b29_2_plus_i_lt_6 b30_3_plus_i_lt_6 b31_4_plus_i_lt_6

    // file wrapped_fs.c line 201 function init_fs
    // FROM Predicates: b20 b21 b28_1_plus_i_lt_6 b29_2_plus_i_lt_6 b30_3_plus_i_lt_6 b31_4_plus_i_lt_6
PC25: skip; // no predicates changed
    // TO Predicates: b20 b21 b28_1_plus_i_lt_6 b29_2_plus_i_lt_6 b30_3_plus_i_lt_6 b31_4_plus_i_lt_6

    // file wrapped_fs.c line 199 function init_fs
    // FROM Predicates: b20 b21 b28_1_plus_i_lt_6 b29_2_plus_i_lt_6 b30_3_plus_i_lt_6 b31_4_plus_i_lt_6
PC26: b26_i_lt_6,b27_i_eq_0,b28_1_plus_i_lt_6,b29_2_plus_i_lt_6,b30_3_plus_i_lt_6,b31_4_plus_i_lt_6 := b28_1_plus_i_lt_6,*,b29_2_plus_i_lt_6,b30_3_plus_i_lt_6,b31_4_plus_i_lt_6,* constrain
    ((!b18) | (!b19)) &
    (b22_dir_lt_3 | b23_dir_ge_0) &
    (b24 | b25) &
    ('b26_i_lt_6 | (!b27_i_eq_0)) &
    (b10 | b11) &
    (b10 | b11) &
    ((!b10) | (!b11)) &
    ((!b10) | (!b11)) &
    ((!b27_i_eq_0) | 'b29_2_plus_i_lt_6) &
    ((!b26_i_lt_6) | 'b26_i_lt_6 | b27_i_eq_0 | 'b28_1_plus_i_lt_6 | (!'b29_2_plus_i_lt_6)) &
    ((!b26_i_lt_6) | b27_i_eq_0 | 'b28_1_plus_i_lt_6 | (!'b29_2_plus_i_lt_6)) &
    ((!b26_i_lt_6) | 'b26_i_lt_6 | (!'b28_1_plus_i_lt_6)) &
    ((!b27_i_eq_0) | 'b31_4_plus_i_lt_6) &
    ((!b26_i_lt_6) | 'b28_1_plus_i_lt_6 | (!'b31_4_plus_i_lt_6));
    // TO Predicates: b20 b21 b26_i_lt_6 b27_i_eq_0 b28_1_plus_i_lt_6 b29_2_plus_i_lt_6 b30_3_plus_i_lt_6 b31_4_plus_i_lt_6

    // FROM Predicates: b20 b21 b26_i_lt_6 b28_1_plus_i_lt_6 b29_2_plus_i_lt_6 b30_3_plus_i_lt_6
PC27: goto l3;
    // TO Predicates: b20 b21 b26_i_lt_6 b28_1_plus_i_lt_6 b29_2_plus_i_lt_6 b30_3_plus_i_lt_6

    // file wrapped_fs.c line 204 function init_fs
    // FROM Predicates: b20 b21
  l4:
PC28: b0,b1,b2,b3,b4,b8,b10,b11,b13,b18,b19 := *,*,*,*,*,*,0,1,*,*,* constrain
    ((!b1) | 'b1) &
    ((!b2) | 'b2) &
    (b1 | b3) &
    (b2 | b4) &
    ((!'b1) | (!'b3)) &
    ((!b0) | 'b0) &
    (b5_dir2_le_0 | (!b7_dir2_eq_minus1)) &
    (b0 | b8) &
    ((!b14_parent_gt_3) | (!b15_parent_lt_0)) &
    ((!'b2) | (!'b4)) &
    (b13 | (!'b13)) &
    ((!b13) | 'b13 | (!b14_parent_gt_3)) &
    ((!'b0) | (!'b8)) &
    ((!b13) | 'b13 | (!b15_parent_lt_0)) &
    (b24 | b25) &
    (b10 | b11) &
    ((!b10) | (!b11));
    // TO Predicates: b0 b1 b2 b3 b4 b8 b10 b11 b13 b18 b19 b20 b21

    // FROM Predicates: b10 b20 b21
PC29: skip; // no predicates changed
    // TO Predicates: b10 b20 b21

    // file wrapped_fs.c line 205 function init_fs
    // FROM Predicates: b10 b20 b21
PC30: skip; // location only
    // TO Predicates: b10 b20 b21

    // FROM Predicates: b10 b20 b21
PC31: skip; // no predicates changed
    // TO Predicates: b10 b20 b21

    // file wrapped_fs.c line 206 function init_fs
    // FROM Predicates: b10 b20 b21
PC32: skip; // location only
    // TO Predicates: b10 b20 b21

    // file wrapped_fs.c line 165 function main
    // FROM Predicates: b10 b20 b21
PC33: b24,b25 := *,* constrain
    ((!b0) | (!b8)) &
    ((!b18) | (!b19)) &
    (b24 | b25);
    // TO Predicates: b10 b20 b21 b24 b25

    // FROM Predicates: b10 b20 b21
PC34: b24,b25 := *,* constrain
    ((!b0) | (!b8)) &
    ((!b18) | (!b19)) &
    (b24 | b25);
    // TO Predicates: b10 b20 b21 b24 b25

    // FROM Predicates: b10 b20 b21 b24 b25
PC35: b22_dir_lt_3,b23_dir_ge_0 := *,* constrain
    ((!b0) | (!b8)) &
    ((!b18) | (!b19)) &
    ('b22_dir_lt_3 | 'b23_dir_ge_0);
    // TO Predicates: b10 b20 b21 b22_dir_lt_3 b23_dir_ge_0 b24 b25

    // FROM Predicates: b10 b20 b21 b24 b25
PC36: b22_dir_lt_3,b23_dir_ge_0 := b24,b25 constrain
    ((!b0) | (!b8)) &
    ((!b18) | (!b19)) &
    (b22_dir_lt_3 | b23_dir_ge_0);
    // TO Predicates: b10 b20 b21 b22_dir_lt_3 b23_dir_ge_0

    // file wrapped_fs.c line 166 function main
    // FROM Predicates: b10 b20 b21 b22_dir_lt_3 b23_dir_ge_0
PC37: assume(b22_dir_lt_3 & b23_dir_ge_0);
    // TO Predicates: b10 b20 b21

    // file wrapped_fs.c line 168 function main
    // FROM Predicates: b10 b20 b21
PC38: b1,b3,b6_dir1_le_0 := *,*,* constrain
    ('b1 | 'b3) &
    (b1 | b3) &
    ((!b1) | (!b3)) &
    ((!'b1) | (!'b3)) &
    (b5_dir2_le_0 | (!b7_dir2_eq_minus1)) &
    (b0 | b8) &
    ((!b14_parent_gt_3) | (!b15_parent_lt_0)) &
    ((!b2) | (!b4)) &
    (b10 | (!b13) | (!b16_parent_eq_0)) &
    ((!b14_parent_gt_3) | (!b16_parent_eq_0)) &
    ((!b0) | (!b8)) &
    ((!b18) | (!b19));
    // TO Predicates: b1 b3 b6_dir1_le_0 b10 b20 b21

    // FROM Predicates: b10 b20 b21
PC39: b1,b3,b6_dir1_le_0 := *,*,1 constrain
    (b1 | b3) &
    ((!'b1) | (!'b3)) &
    ((!b1) | (!b3)) &
    (b5_dir2_le_0 | (!b7_dir2_eq_minus1)) &
    (b0 | b8) &
    ((!b14_parent_gt_3) | (!b15_parent_lt_0)) &
    ((!b2) | (!b4)) &
    (b10 | (!b13) | (!b16_parent_eq_0)) &
    ((!b14_parent_gt_3) | (!b16_parent_eq_0)) &
    ((!b0) | (!b8)) &
    ((!b18) | (!b19));
    // TO Predicates: b1 b3 b6_dir1_le_0 b10 b20 b21

    // file wrapped_fs.c line 169 function main
    // FROM Predicates: b6_dir1_le_0 b10 b20 b21
PC40: b2,b4,b5_dir2_le_0,b7_dir2_eq_minus1 := *,*,*,* constrain
    (b1 | b3) &
    ((!b1) | (!b3)) &
    (b2 | b4) &
    (b5_dir2_le_0 | (!b7_dir2_eq_minus1)) &
    ('b2 | 'b4) &
    ((!b14_parent_gt_3) | (!b15_parent_lt_0)) &
    ((!b2) | (!b4)) &
    ((!'b2) | (!'b4)) &
    ('b5_dir2_le_0 | (!'b7_dir2_eq_minus1)) &
    ((!b0) | (!b8)) &
    ((!b18) | (!b19));
    // TO Predicates: b2 b4 b5_dir2_le_0 b6_dir1_le_0 b7_dir2_eq_minus1 b10 b20 b21

    // FROM Predicates: b6_dir1_le_0 b7_dir2_eq_minus1 b10 b20 b21
PC41: b2,b4,b5_dir2_le_0,b7_dir2_eq_minus1 := *,*,1,1 constrain
    (b1 | b3) &
    ((!b1) | (!b3)) &
    (b2 | b4) &
    ((!b14_parent_gt_3) | (!b15_parent_lt_0)) &
    ((!b15_parent_lt_0) | (!b16_parent_eq_0)) &
    ((!b2) | (!b4)) &
    (b5_dir2_le_0 | (!b7_dir2_eq_minus1)) &
    ((!b0) | (!b8)) &
    ((!b18) | (!b19));
    // TO Predicates: b1 b2 b4 b5_dir2_le_0 b6_dir1_le_0 b7_dir2_eq_minus1 b10 b20 b21

    // file wrapped_fs.c line 171 function main
    // FROM Predicates: b1 b5_dir2_le_0 b6_dir1_le_0 b10 b20 b21
  l5:
PC42: if !b6_dir1_le_0 then goto l14; fi;
    // TO Predicates: b1 b5_dir2_le_0 b10 b20 b21

    // FROM Predicates: b10 b20 b21
PC43: skip; // location only
    // TO Predicates: b10 b20 b21

    // file wrapped_fs.c line 235 function create_dir
    // FROM Predicates: b10 b20 b21
PC44: b13,b14_parent_gt_3,b15_parent_lt_0,b16_parent_eq_0 := *,*,*,* constrain
    (b0 | b8) &
    ((!b14_parent_gt_3) | (!b15_parent_lt_0)) &
    ((!b15_parent_lt_0) | (!b16_parent_eq_0)) &
    (b10 | (!b13) | (!b16_parent_eq_0)) &
    ((!b14_parent_gt_3) | (!b16_parent_eq_0)) &
    ((!b0) | (!b8)) &
    ((!b18) | (!b19)) &
    ((!'b14_parent_gt_3) | (!'b15_parent_lt_0));
    // TO Predicates: b10 b13 b14_parent_gt_3 b15_parent_lt_0 b16_parent_eq_0 b20 b21

    // FROM Predicates: b10 b16_parent_eq_0 b20 b21
PC45: b13,b14_parent_gt_3,b15_parent_lt_0,b16_parent_eq_0 := b10,0,0,1 constrain
    (b0 | b8) &
    ((!b14_parent_gt_3) | (!b16_parent_eq_0)) &
    ((!b15_parent_lt_0) | (!b16_parent_eq_0)) &
    ((!b0) | (!b8)) &
    ((!b18) | (!b19)) &
    ((!b14_parent_gt_3) | (!b15_parent_lt_0));
    // TO Predicates: b10 b11 b13 b14_parent_gt_3 b15_parent_lt_0 b16_parent_eq_0 b20 b21

    // FROM Predicates: b10 b11 b13 b14_parent_gt_3 b15_parent_lt_0 b20 b21
PC46: skip; // no predicates changed
    // TO Predicates: b10 b11 b13 b14_parent_gt_3 b15_parent_lt_0 b20 b21

    // FROM Predicates: b10 b11 b13 b14_parent_gt_3 b15_parent_lt_0 b20 b21
PC47: skip; // no predicates changed
    // TO Predicates: b10 b11 b13 b14_parent_gt_3 b15_parent_lt_0 b20 b21

    // FROM Predicates: b10 b11 b13 b14_parent_gt_3 b15_parent_lt_0 b20 b21
PC48: b0,b8,b9_i_lt_3,b17_1_plus_i_lt_3,b18,b19 := *,*,*,*,*,* constrain
    ((!b1) | (!b3)) &
    (b0 | b8) &
    ((!b0) | (!b8)) &
    ((!'b0) | (!'b8)) &
    ('b18 | 'b19) &
    ((!'b18) | (!'b19));
    // TO Predicates: b0 b8 b9_i_lt_3 b10 b11 b13 b14_parent_gt_3 b15_parent_lt_0 b17_1_plus_i_lt_3 b18 b19 b20 b21

    // file wrapped_fs.c line 236 function create_dir
    // FROM Predicates: b10 b11 b13 b14_parent_gt_3 b15_parent_lt_0 b20 b21
PC49: if b15_parent_lt_0 then goto l6; fi;
    // TO Predicates: b10 b11 b13 b14_parent_gt_3 b20 b21

    // FROM Predicates: b10 b11 b13 b14_parent_gt_3 b20 b21
PC50: if b14_parent_gt_3 then goto l6; fi;
    // TO Predicates: b10 b11 b13 b20 b21

    // FROM Predicates: b10 b11 b13 b20 b21
PC51: goto l7;
    // TO Predicates: b10 b11 b13 b20 b21

    // file wrapped_fs.c line 237 function create_dir
  l6:
PC52: b1,b3,b6_dir1_le_0 := *,*,1;
    // TO Predicates: b1 b3 b6_dir1_le_0

PC53: goto l13;

    // file wrapped_fs.c line 240 function create_dir
    // FROM Predicates: b10 b11 b13 b20 b21
  l7:
PC54: if !b13 then goto l8; fi;
    // TO Predicates: b10 b11 b20 b21

    // file wrapped_fs.c line 241 function create_dir
PC55: b1,b3,b6_dir1_le_0 := *,*,1;
    // TO Predicates: b1 b3 b6_dir1_le_0

PC56: goto l13;

    // file wrapped_fs.c line 243 function create_dir
    // FROM Predicates: b10 b11 b20 b21
  l8:
PC57: b12 := * constrain
    (b0 | b8) &
    ((!b0) | (!b8)) &
    (b18 | b19) &
    ((!b18) | (!b19));
    // TO Predicates: b10 b11 b12 b20 b21

    // FROM Predicates: b10 b11 b20 b21
PC58: skip; // location only
    // TO Predicates: b10 b11 b20 b21

    // FROM Predicates: b10 b11 b20 b21
PC59: skip; // no predicates changed
    // TO Predicates: b10 b11 b20 b21

    // FROM Predicates: b10 b11 b20 b21
PC60: skip; // no predicates changed
    // TO Predicates: b10 b11 b20 b21

    // FROM Predicates: b10 b11 b20 b21
PC61: b12 := * constrain
    (b0 | b8) &
    ((!b0) | (!b8)) &
    (b18 | b19) &
    ((!b18) | (!b19));
    // TO Predicates: b10 b11 b12 b20 b21

    // FROM Predicates: b10 b11 b12 b20 b21
PC62: if b12 then goto l9; fi;
    // TO Predicates: b10 b11 b20 b21

    // file wrapped_fs.c line 244 function create_dir
PC63: b1,b3,b6_dir1_le_0 := *,*,1;
    // TO Predicates: b1 b3 b6_dir1_le_0

PC64: goto l13;

    // file wrapped_fs.c line 247 function create_dir
    // FROM Predicates: b10 b11 b20 b21
  l9:
PC65: b0,b8,b9_i_lt_3,b17_1_plus_i_lt_3,b18,b19 := b11,b10,1,1,b20,b21 constrain
    ((!b1) | (!b3)) &
    (b0 | b8) &
    ((!b0) | (!b8)) &
    (b18 | b19) &
    ((!b18) | (!b19));
    // TO Predicates: b0 b8 b9_i_lt_3 b17_1_plus_i_lt_3 b18 b19

    // FROM Predicates: b0 b8 b9_i_lt_3 b17_1_plus_i_lt_3 b18 b19
 l10:
PC66: if !b9_i_lt_3 then goto l12; fi;
    // TO Predicates: b0 b8 b17_1_plus_i_lt_3 b18 b19

    // file wrapped_fs.c line 249 function create_dir
    // FROM Predicates: b0 b8 b17_1_plus_i_lt_3 b18 b19
PC67: if !b8 then goto l11; fi;
    // TO Predicates: b0 b17_1_plus_i_lt_3 b18 b19

    // file wrapped_fs.c line 261 function create_dir
    // FROM Predicates: b0
PC68: skip; // location only
    // TO Predicates: b0

    // FROM Predicates: b0
PC69: skip; // no predicates changed
    // TO Predicates: b0

    // FROM Predicates: b0
PC70: skip; // no predicates changed
    // TO Predicates: b0

    // FROM Predicates: b0
PC71: skip; // no predicates changed
    // TO Predicates: b0

    // file wrapped_fs.c line 262 function create_dir
    // FROM Predicates: b0
PC72: assert(b0);

    // file wrapped_fs.c line 263 function create_dir
PC73: b1,b3,b6_dir1_le_0 := b0,b8,*;
    // TO Predicates: b1 b3 b6_dir1_le_0

PC74: goto l13;

    // file wrapped_fs.c line 247 function create_dir
    // FROM Predicates: b17_1_plus_i_lt_3 b18 b19
 l11:
PC75: b0,b8,b9_i_lt_3,b17_1_plus_i_lt_3,b18,b19 := b19,b18,b17_1_plus_i_lt_3,*,*,* constrain
    (b26_i_lt_6 | (!b27_i_eq_0)) &
    ((!b0) | 'b0 | (!b9_i_lt_3) | (!'b9_i_lt_3) | b10 | 'b17_1_plus_i_lt_3 | (!b20)) &
    ('b18 | 'b19);
    // TO Predicates: b0 b8 b9_i_lt_3 b17_1_plus_i_lt_3 b18 b19

    // FROM Predicates: b0 b8 b9_i_lt_3
PC76: goto l10;
    // TO Predicates: b0 b8 b9_i_lt_3

    // file wrapped_fs.c line 266 function create_dir
 l12:
PC77: b1,b3,b6_dir1_le_0 := *,*,1;
    // TO Predicates: b1 b3 b6_dir1_le_0

    // file wrapped_fs.c line 267 function create_dir
 l13:
PC78: skip; // location only

    // file wrapped_fs.c line 171 function main
PC79: goto l5;

    // file wrapped_fs.c line 172 function main
    // FROM Predicates: b1 b5_dir2_le_0
 l14:
PC80: if !b5_dir2_le_0 then goto l23; fi;
    // TO Predicates: b1

PC81: skip; // location only

    // file wrapped_fs.c line 235 function create_dir
PC82: b13,b14_parent_gt_3,b15_parent_lt_0,b16_parent_eq_0 := *,*,*,*;
    // TO Predicates: b13 b14_parent_gt_3 b15_parent_lt_0 b16_parent_eq_0

PC83: b13,b14_parent_gt_3,b15_parent_lt_0,b16_parent_eq_0 := b3,*,*,*;
    // TO Predicates: b13 b14_parent_gt_3 b15_parent_lt_0 b16_parent_eq_0

PC84: skip; // no predicates changed

PC85: skip; // no predicates changed

PC86: b0,b8,b9_i_lt_3,b17_1_plus_i_lt_3,b18,b19 := *,*,*,*,*,*;
    // TO Predicates: b0 b8 b9_i_lt_3 b17_1_plus_i_lt_3 b18 b19

    // file wrapped_fs.c line 236 function create_dir
PC87: if b15_parent_lt_0 then goto l15; fi;

PC88: if b14_parent_gt_3 then goto l15; fi;

PC89: goto l16;

    // file wrapped_fs.c line 237 function create_dir
 l15:
PC90: b2,b4,b5_dir2_le_0,b7_dir2_eq_minus1 := *,*,1,0;
    // TO Predicates: b2 b4 b5_dir2_le_0 b7_dir2_eq_minus1

PC91: goto l22;

    // file wrapped_fs.c line 240 function create_dir
 l16:
PC92: if !b13 then goto l17; fi;

    // file wrapped_fs.c line 241 function create_dir
PC93: b2,b4,b5_dir2_le_0,b7_dir2_eq_minus1 := *,*,1,0;
    // TO Predicates: b2 b4 b5_dir2_le_0 b7_dir2_eq_minus1

PC94: goto l22;

    // file wrapped_fs.c line 243 function create_dir
 l17:
PC95: b12 := *;
    // TO Predicates: b12

PC96: skip; // location only

PC97: skip; // no predicates changed

PC98: skip; // no predicates changed

PC99: b12 := *;
    // TO Predicates: b12

PC100: if b12 then goto l18; fi;

    // file wrapped_fs.c line 244 function create_dir
PC101: b2,b4,b5_dir2_le_0,b7_dir2_eq_minus1 := *,*,1,0;
    // TO Predicates: b2 b4 b5_dir2_le_0 b7_dir2_eq_minus1

PC102: goto l22;

    // file wrapped_fs.c line 247 function create_dir
 l18:
PC103: b0,b8,b9_i_lt_3,b17_1_plus_i_lt_3,b18,b19 := b11,b10,1,1,b20,b21;
    // TO Predicates: b0 b8 b9_i_lt_3 b17_1_plus_i_lt_3 b18 b19

 l19:
PC104: if !b9_i_lt_3 then goto l21; fi;

    // file wrapped_fs.c line 249 function create_dir
PC105: if !b8 then goto l20; fi;

    // file wrapped_fs.c line 261 function create_dir
PC106: skip; // location only

PC107: skip; // no predicates changed

PC108: skip; // no predicates changed

PC109: skip; // no predicates changed

    // file wrapped_fs.c line 262 function create_dir
PC110: assert(b0);

    // file wrapped_fs.c line 263 function create_dir
PC111: b2,b4,b5_dir2_le_0,b7_dir2_eq_minus1 := b0,b8,*,*;
    // TO Predicates: b2 b4 b5_dir2_le_0 b7_dir2_eq_minus1

PC112: goto l22;

    // file wrapped_fs.c line 247 function create_dir
 l20:
PC113: b0,b8,b9_i_lt_3,b17_1_plus_i_lt_3,b18,b19 := b19,b18,b17_1_plus_i_lt_3,*,*,*;
    // TO Predicates: b0 b8 b9_i_lt_3 b17_1_plus_i_lt_3 b18 b19

PC114: goto l19;

    // file wrapped_fs.c line 266 function create_dir
 l21:
PC115: b2,b4,b5_dir2_le_0,b7_dir2_eq_minus1 := *,*,1,0;
    // TO Predicates: b2 b4 b5_dir2_le_0 b7_dir2_eq_minus1

    // file wrapped_fs.c line 267 function create_dir
 l22:
PC116: skip; // location only

    // file wrapped_fs.c line 172 function main
PC117: goto l14;

    // file wrapped_fs.c line 174 function main
    // FROM Predicates: b1
 l23:
PC118: assert(b1);

    // file wrapped_fs.c line 175 function main
PC119: assert(b2);

    // file wrapped_fs.c line 178 function main
PC120: skip; // location only

    // file wrapped_fs.c line 271 function close_dir
PC121: skip; // no predicates changed

PC122: skip; // no predicates changed

PC123: skip; // no predicates changed

    // file wrapped_fs.c line 278 function close_dir
PC124: if * then goto l24; fi;

PC125: if * then goto l24; fi;

PC126: goto l25;

    // file wrapped_fs.c line 280 function close_dir
 l24:
PC127: skip; // no predicates changed

PC128: goto l27;

    // file wrapped_fs.c line 284 function close_dir
 l25:
PC129: if !(*) then goto l26; fi;

    // file wrapped_fs.c line 285 function close_dir
PC130: skip; // no predicates changed

PC131: goto l27;

    // file wrapped_fs.c line 317 function close_dir
 l26:
PC132: skip; // location only

PC133: skip; // no predicates changed

    // file wrapped_fs.c line 318 function close_dir
PC134: skip; // no predicates changed

 l27:
PC135: skip; // location only

    // file wrapped_fs.c line 179 function main
PC136: assert(b3);

    // file wrapped_fs.c line 180 function main
PC137: assert(b4);

    // file wrapped_fs.c line 184 function main
 l28:
PC138: goto l28;

PC139: skip;

end

// c::__CPROVER_initialize
void c$$__CPROVER_initialize() begin

      // the procedure-local variables

  decl b0;                 // (1 & dir_status[i]) == 1
  decl b1;                 // (1 & dir_status[dir1]) == 1
  decl b2;                 // (1 & dir_status[dir2]) == 1
  decl b3;                 // (1 & dir_status[dir1]) == 0
  decl b4;                 // (1 & dir_status[dir2]) == 0
  decl b5_dir2_le_0;       // dir2 <= 0
  decl b6_dir1_le_0;       // dir1 <= 0
  decl b7_dir2_eq_minus1;  // dir2 == -1
  decl b8;                 // (1 & dir_status[i]) == 0
  decl b9_i_lt_3;          // i < 3
  decl b12;                // return_value_fs_exists_dir$1 == 0
  decl b13;                // (1 & dir_status[parent]) == 0
  decl b14_parent_gt_3;    // parent > 3
  decl b15_parent_lt_0;    // parent < 0
  decl b16_parent_eq_0;    // parent == 0
  decl b17_1_plus_i_lt_3;  // 1 + i < 3
  decl b18;                // (1 & dir_status[1 + i]) == 0
  decl b19;                // (1 & dir_status[1 + i]) == 1
  decl b22_dir_lt_3;       // dir < 3
  decl b23_dir_ge_0;       // dir >= 0
  decl b24;                // return_value_nondet_int$1 < 3
  decl b25;                // return_value_nondet_int$1 >= 0
  decl b26_i_lt_6;         // i < 6
  decl b27_i_eq_0;         // i == 0
  decl b28_1_plus_i_lt_6;  // 1 + i < 6
  decl b29_2_plus_i_lt_6;  // 2 + i < 6
  decl b30_3_plus_i_lt_6;  // 3 + i < 6
  decl b31_4_plus_i_lt_6;  // 4 + i < 6

end

// c::init_fs
void c$$init_fs() begin

      // the procedure-local variables

  decl b0;                 // (1 & dir_status[i]) == 1
  decl b1;                 // (1 & dir_status[dir1]) == 1
  decl b2;                 // (1 & dir_status[dir2]) == 1
  decl b3;                 // (1 & dir_status[dir1]) == 0
  decl b4;                 // (1 & dir_status[dir2]) == 0
  decl b5_dir2_le_0;       // dir2 <= 0
  decl b6_dir1_le_0;       // dir1 <= 0
  decl b7_dir2_eq_minus1;  // dir2 == -1
  decl b8;                 // (1 & dir_status[i]) == 0
  decl b9_i_lt_3;          // i < 3
  decl b12;                // return_value_fs_exists_dir$1 == 0
  decl b13;                // (1 & dir_status[parent]) == 0
  decl b14_parent_gt_3;    // parent > 3
  decl b15_parent_lt_0;    // parent < 0
  decl b16_parent_eq_0;    // parent == 0
  decl b17_1_plus_i_lt_3;  // 1 + i < 3
  decl b18;                // (1 & dir_status[1 + i]) == 0
  decl b19;                // (1 & dir_status[1 + i]) == 1
  decl b22_dir_lt_3;       // dir < 3
  decl b23_dir_ge_0;       // dir >= 0
  decl b24;                // return_value_nondet_int$1 < 3
  decl b25;                // return_value_nondet_int$1 >= 0
  decl b26_i_lt_6;         // i < 6
  decl b27_i_eq_0;         // i == 0
  decl b28_1_plus_i_lt_6;  // 1 + i < 6
  decl b29_2_plus_i_lt_6;  // 2 + i < 6
  decl b30_3_plus_i_lt_6;  // 3 + i < 6
  decl b31_4_plus_i_lt_6;  // 4 + i < 6

end

// c::create_dir
void c$$create_dir() begin

      // the procedure-local variables

  decl b0;                 // (1 & dir_status[i]) == 1
  decl b1;                 // (1 & dir_status[dir1]) == 1
  decl b2;                 // (1 & dir_status[dir2]) == 1
  decl b3;                 // (1 & dir_status[dir1]) == 0
  decl b4;                 // (1 & dir_status[dir2]) == 0
  decl b5_dir2_le_0;       // dir2 <= 0
  decl b6_dir1_le_0;       // dir1 <= 0
  decl b7_dir2_eq_minus1;  // dir2 == -1
  decl b8;                 // (1 & dir_status[i]) == 0
  decl b9_i_lt_3;          // i < 3
  decl b12;                // return_value_fs_exists_dir$1 == 0
  decl b13;                // (1 & dir_status[parent]) == 0
  decl b14_parent_gt_3;    // parent > 3
  decl b15_parent_lt_0;    // parent < 0
  decl b16_parent_eq_0;    // parent == 0
  decl b17_1_plus_i_lt_3;  // 1 + i < 3
  decl b18;                // (1 & dir_status[1 + i]) == 0
  decl b19;                // (1 & dir_status[1 + i]) == 1
  decl b22_dir_lt_3;       // dir < 3
  decl b23_dir_ge_0;       // dir >= 0
  decl b24;                // return_value_nondet_int$1 < 3
  decl b25;                // return_value_nondet_int$1 >= 0
  decl b26_i_lt_6;         // i < 6
  decl b27_i_eq_0;         // i == 0
  decl b28_1_plus_i_lt_6;  // 1 + i < 6
  decl b29_2_plus_i_lt_6;  // 2 + i < 6
  decl b30_3_plus_i_lt_6;  // 3 + i < 6
  decl b31_4_plus_i_lt_6;  // 4 + i < 6

end

// c::close_dir
void c$$close_dir() begin

      // the procedure-local variables

  decl b0;                 // (1 & dir_status[i]) == 1
  decl b1;                 // (1 & dir_status[dir1]) == 1
  decl b2;                 // (1 & dir_status[dir2]) == 1
  decl b3;                 // (1 & dir_status[dir1]) == 0
  decl b4;                 // (1 & dir_status[dir2]) == 0
  decl b5_dir2_le_0;       // dir2 <= 0
  decl b6_dir1_le_0;       // dir1 <= 0
  decl b7_dir2_eq_minus1;  // dir2 == -1
  decl b8;                 // (1 & dir_status[i]) == 0
  decl b9_i_lt_3;          // i < 3
  decl b12;                // return_value_fs_exists_dir$1 == 0
  decl b13;                // (1 & dir_status[parent]) == 0
  decl b14_parent_gt_3;    // parent > 3
  decl b15_parent_lt_0;    // parent < 0
  decl b16_parent_eq_0;    // parent == 0
  decl b17_1_plus_i_lt_3;  // 1 + i < 3
  decl b18;                // (1 & dir_status[1 + i]) == 0
  decl b19;                // (1 & dir_status[1 + i]) == 1
  decl b22_dir_lt_3;       // dir < 3
  decl b23_dir_ge_0;       // dir >= 0
  decl b24;                // return_value_nondet_int$1 < 3
  decl b25;                // return_value_nondet_int$1 >= 0
  decl b26_i_lt_6;         // i < 6
  decl b27_i_eq_0;         // i == 0
  decl b28_1_plus_i_lt_6;  // 1 + i < 6
  decl b29_2_plus_i_lt_6;  // 2 + i < 6
  decl b30_3_plus_i_lt_6;  // 3 + i < 6
  decl b31_4_plus_i_lt_6;  // 4 + i < 6

end

// c::fs_init_root
void c$$fs_init_root() begin

      // the procedure-local variables

  decl b0;                 // (1 & dir_status[i]) == 1
  decl b1;                 // (1 & dir_status[dir1]) == 1
  decl b2;                 // (1 & dir_status[dir2]) == 1
  decl b3;                 // (1 & dir_status[dir1]) == 0
  decl b4;                 // (1 & dir_status[dir2]) == 0
  decl b5_dir2_le_0;       // dir2 <= 0
  decl b6_dir1_le_0;       // dir1 <= 0
  decl b7_dir2_eq_minus1;  // dir2 == -1
  decl b8;                 // (1 & dir_status[i]) == 0
  decl b9_i_lt_3;          // i < 3
  decl b12;                // return_value_fs_exists_dir$1 == 0
  decl b13;                // (1 & dir_status[parent]) == 0
  decl b14_parent_gt_3;    // parent > 3
  decl b15_parent_lt_0;    // parent < 0
  decl b16_parent_eq_0;    // parent == 0
  decl b17_1_plus_i_lt_3;  // 1 + i < 3
  decl b18;                // (1 & dir_status[1 + i]) == 0
  decl b19;                // (1 & dir_status[1 + i]) == 1
  decl b22_dir_lt_3;       // dir < 3
  decl b23_dir_ge_0;       // dir >= 0
  decl b24;                // return_value_nondet_int$1 < 3
  decl b25;                // return_value_nondet_int$1 >= 0
  decl b26_i_lt_6;         // i < 6
  decl b27_i_eq_0;         // i == 0
  decl b28_1_plus_i_lt_6;  // 1 + i < 6
  decl b29_2_plus_i_lt_6;  // 2 + i < 6
  decl b30_3_plus_i_lt_6;  // 3 + i < 6
  decl b31_4_plus_i_lt_6;  // 4 + i < 6

end

// c::fs_exists_dir
void c$$fs_exists_dir() begin

      // the procedure-local variables

  decl b0;                 // (1 & dir_status[i]) == 1
  decl b1;                 // (1 & dir_status[dir1]) == 1
  decl b2;                 // (1 & dir_status[dir2]) == 1
  decl b3;                 // (1 & dir_status[dir1]) == 0
  decl b4;                 // (1 & dir_status[dir2]) == 0
  decl b5_dir2_le_0;       // dir2 <= 0
  decl b6_dir1_le_0;       // dir1 <= 0
  decl b7_dir2_eq_minus1;  // dir2 == -1
  decl b8;                 // (1 & dir_status[i]) == 0
  decl b9_i_lt_3;          // i < 3
  decl b12;                // return_value_fs_exists_dir$1 == 0
  decl b13;                // (1 & dir_status[parent]) == 0
  decl b14_parent_gt_3;    // parent > 3
  decl b15_parent_lt_0;    // parent < 0
  decl b16_parent_eq_0;    // parent == 0
  decl b17_1_plus_i_lt_3;  // 1 + i < 3
  decl b18;                // (1 & dir_status[1 + i]) == 0
  decl b19;                // (1 & dir_status[1 + i]) == 1
  decl b22_dir_lt_3;       // dir < 3
  decl b23_dir_ge_0;       // dir >= 0
  decl b24;                // return_value_nondet_int$1 < 3
  decl b25;                // return_value_nondet_int$1 >= 0
  decl b26_i_lt_6;         // i < 6
  decl b27_i_eq_0;         // i == 0
  decl b28_1_plus_i_lt_6;  // 1 + i < 6
  decl b29_2_plus_i_lt_6;  // 2 + i < 6
  decl b30_3_plus_i_lt_6;  // 3 + i < 6
  decl b31_4_plus_i_lt_6;  // 4 + i < 6

end

// c::fs_create_dir
void c$$fs_create_dir() begin

      // the procedure-local variables

  decl b0;                 // (1 & dir_status[i]) == 1
  decl b1;                 // (1 & dir_status[dir1]) == 1
  decl b2;                 // (1 & dir_status[dir2]) == 1
  decl b3;                 // (1 & dir_status[dir1]) == 0
  decl b4;                 // (1 & dir_status[dir2]) == 0
  decl b5_dir2_le_0;       // dir2 <= 0
  decl b6_dir1_le_0;       // dir1 <= 0
  decl b7_dir2_eq_minus1;  // dir2 == -1
  decl b8;                 // (1 & dir_status[i]) == 0
  decl b9_i_lt_3;          // i < 3
  decl b12;                // return_value_fs_exists_dir$1 == 0
  decl b13;                // (1 & dir_status[parent]) == 0
  decl b14_parent_gt_3;    // parent > 3
  decl b15_parent_lt_0;    // parent < 0
  decl b16_parent_eq_0;    // parent == 0
  decl b17_1_plus_i_lt_3;  // 1 + i < 3
  decl b18;                // (1 & dir_status[1 + i]) == 0
  decl b19;                // (1 & dir_status[1 + i]) == 1
  decl b22_dir_lt_3;       // dir < 3
  decl b23_dir_ge_0;       // dir >= 0
  decl b24;                // return_value_nondet_int$1 < 3
  decl b25;                // return_value_nondet_int$1 >= 0
  decl b26_i_lt_6;         // i < 6
  decl b27_i_eq_0;         // i == 0
  decl b28_1_plus_i_lt_6;  // 1 + i < 6
  decl b29_2_plus_i_lt_6;  // 2 + i < 6
  decl b30_3_plus_i_lt_6;  // 3 + i < 6
  decl b31_4_plus_i_lt_6;  // 4 + i < 6

end

// c::fs_close_dir
void c$$fs_close_dir() begin

      // the procedure-local variables

  decl b0;                 // (1 & dir_status[i]) == 1
  decl b1;                 // (1 & dir_status[dir1]) == 1
  decl b2;                 // (1 & dir_status[dir2]) == 1
  decl b3;                 // (1 & dir_status[dir1]) == 0
  decl b4;                 // (1 & dir_status[dir2]) == 0
  decl b5_dir2_le_0;       // dir2 <= 0
  decl b6_dir1_le_0;       // dir1 <= 0
  decl b7_dir2_eq_minus1;  // dir2 == -1
  decl b8;                 // (1 & dir_status[i]) == 0
  decl b9_i_lt_3;          // i < 3
  decl b12;                // return_value_fs_exists_dir$1 == 0
  decl b13;                // (1 & dir_status[parent]) == 0
  decl b14_parent_gt_3;    // parent > 3
  decl b15_parent_lt_0;    // parent < 0
  decl b16_parent_eq_0;    // parent == 0
  decl b17_1_plus_i_lt_3;  // 1 + i < 3
  decl b18;                // (1 & dir_status[1 + i]) == 0
  decl b19;                // (1 & dir_status[1 + i]) == 1
  decl b22_dir_lt_3;       // dir < 3
  decl b23_dir_ge_0;       // dir >= 0
  decl b24;                // return_value_nondet_int$1 < 3
  decl b25;                // return_value_nondet_int$1 >= 0
  decl b26_i_lt_6;         // i < 6
  decl b27_i_eq_0;         // i == 0
  decl b28_1_plus_i_lt_6;  // 1 + i < 6
  decl b29_2_plus_i_lt_6;  // 2 + i < 6
  decl b30_3_plus_i_lt_6;  // 3 + i < 6
  decl b31_4_plus_i_lt_6;  // 4 + i < 6

end

// c::main
void c$$main() begin

      // the procedure-local variables

  decl b0;                 // (1 & dir_status[i]) == 1
  decl b1;                 // (1 & dir_status[dir1]) == 1
  decl b2;                 // (1 & dir_status[dir2]) == 1
  decl b3;                 // (1 & dir_status[dir1]) == 0
  decl b4;                 // (1 & dir_status[dir2]) == 0
  decl b5_dir2_le_0;       // dir2 <= 0
  decl b6_dir1_le_0;       // dir1 <= 0
  decl b7_dir2_eq_minus1;  // dir2 == -1
  decl b8;                 // (1 & dir_status[i]) == 0
  decl b9_i_lt_3;          // i < 3
  decl b12;                // return_value_fs_exists_dir$1 == 0
  decl b13;                // (1 & dir_status[parent]) == 0
  decl b14_parent_gt_3;    // parent > 3
  decl b15_parent_lt_0;    // parent < 0
  decl b16_parent_eq_0;    // parent == 0
  decl b17_1_plus_i_lt_3;  // 1 + i < 3
  decl b18;                // (1 & dir_status[1 + i]) == 0
  decl b19;                // (1 & dir_status[1 + i]) == 1
  decl b22_dir_lt_3;       // dir < 3
  decl b23_dir_ge_0;       // dir >= 0
  decl b24;                // return_value_nondet_int$1 < 3
  decl b25;                // return_value_nondet_int$1 >= 0
  decl b26_i_lt_6;         // i < 6
  decl b27_i_eq_0;         // i == 0
  decl b28_1_plus_i_lt_6;  // 1 + i < 6
  decl b29_2_plus_i_lt_6;  // 2 + i < 6
  decl b30_3_plus_i_lt_6;  // 3 + i < 6
  decl b31_4_plus_i_lt_6;  // 4 + i < 6

end

