-- automatically generated by CPROVER/SATABS

-- threads: 1

MODULE main

-- variables of the abstract program

VAR b0: boolean;                -- (1 & file_status[fd]) == 0
VAR b1_testBuff_gt_10: boolean; -- testBuff > 10
VAR b2: boolean;                -- return_value_testFunc$3 == 11

DEFINE runs:=TRUE;

-- program counter
-- 53 is the "terminating" PC

VAR PC: 0..53;

-- initial PC

ASSIGN init(PC):=0;

-- non-deterministic choice

VAR nondet2: boolean;
VAR nondet0: boolean;
VAR nondet1: boolean;
VAR nondet3: boolean;

-- guards

-- file main_fs.c line 33 function main
DEFINE guard26:=(nondet0) | (nondet1);
-- file main_fs.c line 34 function main
DEFINE guard27:=(nondet2) & (nondet3);
-- file main_fs.c line 11 function testFunc
DEFINE guard33:=b1_testBuff_gt_10;
-- file main_fs.c line 40 function main
DEFINE guard38:=b2;
-- file wrapped_fs.c line 156 function read_file
DEFINE guard45:=!b0;
-- file wrapped_fs.c line 160 function read_file
DEFINE guard46:=b0;
-- file wrapped_fs.c line 161 function read_file
DEFINE guard47:=TRUE;
-- file wrapped_fs.c line 166 function read_file
DEFINE guard48:=TRUE;
-- file main_fs.c line 48 function main
DEFINE guard50:=TRUE;

-- control flow

ASSIGN next(PC):=case
    !runs: PC;
    PC=0: 1; -- function call
    -- file main_fs.c line 7
    PC=1: 2; -- assign
    -- file wrapped_fs.c line 10
    PC=2: 3; -- assign
    -- file wrapped_fs.c line 13
    PC=3: 4; -- assign
    -- file <built-in> line 26
    PC=4: 5; -- assign
    -- file <built-in> line 27
    PC=5: 6; -- assign
    -- file <built-in> line 28
    PC=6: 7; -- assign
    -- file <built-in> line 29
    PC=7: 8; -- assign
    -- file <built-in> line 38
    PC=8: 9; -- assign
    -- file wrapped_fs.h line 45
    PC=9: 10; -- assign
    -- file wrapped_fs.h line 46
    PC=10: 11; -- assign
    -- file wrapped_fs.h line 47
    PC=11: 12; -- assign
    -- file wrapped_fs.h line 45
    PC=12: 13; -- assign
    -- file wrapped_fs.h line 46
    PC=13: 14; -- assign
    -- file wrapped_fs.h line 47
    PC=14: 15; -- assign
    PC=15: 16; -- end_function
    PC=16: 17; -- function call
    -- file main_fs.c line 28 function main
    PC=17: 18; -- decl
    -- file main_fs.c line 31 function main
    PC=18: 19; -- decl
    -- file main_fs.c line 31 function main
    PC=19: 20; -- assign
    -- file main_fs.c line 31 function main
    PC=20: 21; -- decl
    -- file main_fs.c line 31 function main
    PC=21: 22; -- assign
    -- file main_fs.c line 32 function main
    PC=22: 23; -- decl
    -- file main_fs.c line 32 function main
    PC=23: 24; -- assign
    -- file main_fs.c line 32 function main
    PC=24: 25; -- decl
    -- file main_fs.c line 32 function main
    PC=25: 26; -- assign
    -- file main_fs.c line 33 function main
    PC=26: case  -- assume/assert
      guard26: 27;
      TRUE: 26;
    esac;
    -- file main_fs.c line 34 function main
    PC=27: case  -- assume/assert
      guard27: 28;
      TRUE: 27;
    esac;
    -- file main_fs.c line 36 function main
    PC=28: 29; -- assign
    -- file main_fs.c line 37 function main
    PC=29: 30; -- assign
    -- file main_fs.c line 39 function main
    PC=30: 31; -- assign
    -- file main_fs.c line 40 function main
    PC=31: 32; -- decl
    -- file main_fs.c line 40 function main
    PC=32: 33; -- function call
    -- file main_fs.c line 11 function testFunc
    PC=33: case  -- assume/assert
      guard33: 34;
      TRUE: 33;
    esac;
    -- file main_fs.c line 12 function testFunc
    PC=34: 35; -- assign
    -- file main_fs.c line 12 function testFunc
    PC=35: 36; -- return
    -- file main_fs.c line 13 function testFunc
    PC=36: 37; -- end_function
    -- file main_fs.c line 40 function main
    PC=37: 38; -- assign
    -- file main_fs.c line 40 function main
    PC=38: case  -- assume/assert
      guard38: 39;
      TRUE: 38;
    esac;
    -- file main_fs.c line 48 function main
    PC=39: 40; -- decl
    -- file main_fs.c line 48 function main
    PC=40: 41; -- assign
    -- file main_fs.c line 48 function main
    PC=41: 42; -- assign
    -- file main_fs.c line 48 function main
    PC=42: 43; -- assign
    -- file main_fs.c line 48 function main
    PC=43: 44; -- assign
    -- file main_fs.c line 48 function main
    PC=44: 45; -- function call
    -- file wrapped_fs.c line 156 function read_file
    PC=45: case  -- goto (with guard)
      guard45: 48;
      TRUE: 46;
    esac;
    -- file wrapped_fs.c line 160 function read_file
    PC=46: case  -- assume/assert
      guard46: 47;
      TRUE: 46;
    esac;
    -- file wrapped_fs.c line 161 function read_file
    PC=47: 47; -- goto (without guard)
    -- file wrapped_fs.c line 166 function read_file
    PC=48: 48; -- goto (without guard)
    -- file wrapped_fs.c line 167 function read_file
    PC=49: 50; -- end_function
    -- file main_fs.c line 48 function main
    PC=50: 50; -- goto (without guard)
    -- file main_fs.c line 112 function main
    PC=51: 52; -- end_function
    PC=52: 53; -- end_function
    -- infinite loop for termination
    PC=53: 53;
  esac;

-- the transition constraints

    -- FROM Predicates:
TRANS (PC=0 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 7
    -- FROM Predicates:
TRANS (PC=1 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=(FALSE) & next(b2)=b2
    -- TO Predicates: b1_testBuff_gt_10
-- file wrapped_fs.c line 10
    -- FROM Predicates:
TRANS (PC=2 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file wrapped_fs.c line 13
    -- FROM Predicates:
TRANS (PC=3 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file <built-in> line 26
    -- FROM Predicates:
TRANS (PC=4 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file <built-in> line 27
    -- FROM Predicates:
TRANS (PC=5 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file <built-in> line 28
    -- FROM Predicates:
TRANS (PC=6 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file <built-in> line 29
    -- FROM Predicates:
TRANS (PC=7 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file <built-in> line 38
    -- FROM Predicates:
TRANS (PC=8 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file wrapped_fs.h line 45
    -- FROM Predicates:
TRANS (PC=9 & runs) -> next(b1_testBuff_gt_10)=b1_testBuff_gt_10
              & next(b2)=b2
    -- TO Predicates: b0
-- file wrapped_fs.h line 46
    -- FROM Predicates:
TRANS (PC=10 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file wrapped_fs.h line 47
    -- FROM Predicates:
TRANS (PC=11 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file wrapped_fs.h line 45
    -- FROM Predicates:
TRANS (PC=12 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file wrapped_fs.h line 46
    -- FROM Predicates:
TRANS (PC=13 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file wrapped_fs.h line 47
    -- FROM Predicates:
TRANS (PC=14 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
    -- FROM Predicates:
TRANS (PC=15 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
    -- FROM Predicates:
TRANS (PC=16 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 28 function main
    -- FROM Predicates:
TRANS (PC=17 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 31 function main
    -- FROM Predicates:
TRANS (PC=18 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 31 function main
    -- FROM Predicates:
TRANS (PC=19 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 31 function main
    -- FROM Predicates:
TRANS (PC=20 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 31 function main
    -- FROM Predicates:
TRANS (PC=21 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 32 function main
    -- FROM Predicates:
TRANS (PC=22 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 32 function main
    -- FROM Predicates:
TRANS (PC=23 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 32 function main
    -- FROM Predicates:
TRANS (PC=24 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 32 function main
    -- FROM Predicates:
TRANS (PC=25 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 33 function main
    -- FROM Predicates:
TRANS (PC=26 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 34 function main
    -- FROM Predicates:
TRANS (PC=27 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 36 function main
    -- FROM Predicates:
TRANS (PC=28 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 37 function main
    -- FROM Predicates:
TRANS (PC=29 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 39 function main
    -- FROM Predicates:
TRANS (PC=30 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=(TRUE) & next(b2)=b2
    -- TO Predicates: b1_testBuff_gt_10
-- file main_fs.c line 40 function main
    -- FROM Predicates:
TRANS (PC=31 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10
    -- TO Predicates: b2
-- file main_fs.c line 40 function main
    -- FROM Predicates:
TRANS (PC=32 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 11 function testFunc
    -- FROM Predicates:
TRANS (PC=33 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 12 function testFunc
    -- FROM Predicates:
TRANS (PC=34 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 12 function testFunc
    -- FROM Predicates:
TRANS (PC=35 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 13 function testFunc
    -- FROM Predicates:
TRANS (PC=36 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 40 function main
    -- FROM Predicates:
TRANS (PC=37 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10
    -- TO Predicates: b2
-- file main_fs.c line 40 function main
    -- FROM Predicates:
TRANS (PC=38 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 48 function main
    -- FROM Predicates:
TRANS (PC=39 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 48 function main
    -- FROM Predicates:
TRANS (PC=40 & runs) -> next(b1_testBuff_gt_10)=b1_testBuff_gt_10
              & next(b2)=b2
    -- TO Predicates: b0
-- file main_fs.c line 48 function main
    -- FROM Predicates:
TRANS (PC=41 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 48 function main
    -- FROM Predicates:
TRANS (PC=42 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 48 function main
    -- FROM Predicates:
TRANS (PC=43 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 48 function main
    -- FROM Predicates:
TRANS (PC=44 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file wrapped_fs.c line 156 function read_file
    -- FROM Predicates:
TRANS (PC=45 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file wrapped_fs.c line 160 function read_file
    -- FROM Predicates:
TRANS (PC=46 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file wrapped_fs.c line 161 function read_file
    -- FROM Predicates:
TRANS (PC=47 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file wrapped_fs.c line 166 function read_file
    -- FROM Predicates:
TRANS (PC=48 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file wrapped_fs.c line 167 function read_file
    -- FROM Predicates:
TRANS (PC=49 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 48 function main
    -- FROM Predicates:
TRANS (PC=50 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- file main_fs.c line 112 function main
    -- FROM Predicates:
TRANS (PC=51 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
    -- FROM Predicates:
TRANS (PC=52 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2
    -- TO Predicates:
-- termination
TRANS (PC=53 & runs) -> next(b0)=b0
              & next(b1_testBuff_gt_10)=b1_testBuff_gt_10 & next(b2)=b2

-- the specification

-- file main_fs.c line 11 function testFunc
SPEC AG ((PC=33 & runs) -> guard33)
-- file main_fs.c line 40 function main
SPEC AG ((PC=38 & runs) -> guard38)
-- file wrapped_fs.c line 160 function read_file
SPEC AG ((PC=46 & runs) -> guard46)

